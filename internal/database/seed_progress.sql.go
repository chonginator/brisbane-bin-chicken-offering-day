// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: seed_progress.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getSeedProgress = `-- name: GetSeedProgress :one
SELECT id, last_processed_index
FROM seed_progress
LIMIT 1
`

type GetSeedProgressRow struct {
	ID                 uuid.UUID
	LastProcessedIndex int64
}

func (q *Queries) GetSeedProgress(ctx context.Context) (GetSeedProgressRow, error) {
	row := q.db.QueryRowContext(ctx, getSeedProgress)
	var i GetSeedProgressRow
	err := row.Scan(&i.ID, &i.LastProcessedIndex)
	return i, err
}

const updateSeedProgress = `-- name: UpdateSeedProgress :exec
UPDATE seed_progress
SET last_processed_index = ?1,
    updated_at = DATETIME('now', 'utc')
WHERE id = ?2
`

type UpdateSeedProgressParams struct {
	LastProcessedIndex int64
	ID                 uuid.UUID
}

func (q *Queries) UpdateSeedProgress(ctx context.Context, arg UpdateSeedProgressParams) error {
	_, err := q.db.ExecContext(ctx, updateSeedProgress, arg.LastProcessedIndex, arg.ID)
	return err
}
